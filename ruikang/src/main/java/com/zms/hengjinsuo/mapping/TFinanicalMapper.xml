<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zms.hengjinsuo.dao.TFinanicalMapper" >
  <resultMap id="BaseResultMap" type="com.zms.hengjinsuo.bean.TFinanical" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="longTime" property="longtime" jdbcType="VARCHAR" />
    <result column="apr" property="apr" jdbcType="VARCHAR" />
    <result column="backType" property="backtype" jdbcType="VARCHAR" />
    <result column="readCount" property="readcount" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, time, title, longTime, apr, backType, readCount, content
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zms.hengjinsuo.bean.TFinanicalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_finanical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_finanical
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_finanical
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zms.hengjinsuo.bean.TFinanicalExample" >
    delete from t_finanical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zms.hengjinsuo.bean.TFinanical" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_finanical (userId, time, title, 
      longTime, apr, backType, 
      readCount, content)
    values (#{userid,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, 
      #{longtime,jdbcType=VARCHAR}, #{apr,jdbcType=VARCHAR}, #{backtype,jdbcType=VARCHAR}, 
      #{readcount,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zms.hengjinsuo.bean.TFinanical" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_finanical
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="longtime != null" >
        longTime,
      </if>
      <if test="apr != null" >
        apr,
      </if>
      <if test="backtype != null" >
        backType,
      </if>
      <if test="readcount != null" >
        readCount,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="longtime != null" >
        #{longtime,jdbcType=VARCHAR},
      </if>
      <if test="apr != null" >
        #{apr,jdbcType=VARCHAR},
      </if>
      <if test="backtype != null" >
        #{backtype,jdbcType=VARCHAR},
      </if>
      <if test="readcount != null" >
        #{readcount,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zms.hengjinsuo.bean.TFinanicalExample" resultType="java.lang.Integer" >
    select count(*) from t_finanical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_finanical
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.longtime != null" >
        longTime = #{record.longtime,jdbcType=VARCHAR},
      </if>
      <if test="record.apr != null" >
        apr = #{record.apr,jdbcType=VARCHAR},
      </if>
      <if test="record.backtype != null" >
        backType = #{record.backtype,jdbcType=VARCHAR},
      </if>
      <if test="record.readcount != null" >
        readCount = #{record.readcount,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_finanical
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      longTime = #{record.longtime,jdbcType=VARCHAR},
      apr = #{record.apr,jdbcType=VARCHAR},
      backType = #{record.backtype,jdbcType=VARCHAR},
      readCount = #{record.readcount,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zms.hengjinsuo.bean.TFinanical" >
    update t_finanical
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="longtime != null" >
        longTime = #{longtime,jdbcType=VARCHAR},
      </if>
      <if test="apr != null" >
        apr = #{apr,jdbcType=VARCHAR},
      </if>
      <if test="backtype != null" >
        backType = #{backtype,jdbcType=VARCHAR},
      </if>
      <if test="readcount != null" >
        readCount = #{readcount,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zms.hengjinsuo.bean.TFinanical" >
    update t_finanical
    set userId = #{userid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      longTime = #{longtime,jdbcType=VARCHAR},
      apr = #{apr,jdbcType=VARCHAR},
      backType = #{backtype,jdbcType=VARCHAR},
      readCount = #{readcount,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>